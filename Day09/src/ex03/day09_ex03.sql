DROP TRIGGER IF EXISTS TRG_PERSON_INSERT_AUDIT ON PERSON;
DROP TRIGGER IF EXISTS TRG_PERSON_UPDATE_AUDIT ON PERSON;
DROP TRIGGER IF EXISTS TRG_PERSON_DELETE_AUDIT ON PERSON;

DROP FUNCTION IF EXISTS FNC_TRG_PERSON_INSERT_AUDIT();
DROP FUNCTION IF EXISTS FNC_TRG_PERSON_UPDATE_AUDIT();
DROP FUNCTION IF EXISTS FNC_TRG_PERSON_DELETE_AUDIT();

TRUNCATE person_audit;

CREATE OR REPLACE FUNCTION fnc_trg_person_audit() RETURNS TRIGGER AS
$PERSON_AUDIT$
BEGIN
    IF (TG_OP = 'INSERT') THEN
        INSERT INTO PERSON_AUDIT SELECT NOW(), 'I', NEW.*;
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO PERSON_AUDIT SELECT NOW(), 'U', OLD.*;
    ELSIF (TG_OP = 'DELETE') THEN
        INSERT INTO PERSON_AUDIT SELECT NOW(), 'D', OLD.*;
    END IF;
    RETURN NULL;
END;
$PERSON_AUDIT$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER trg_person_audit
    AFTER INSERT OR UPDATE OR DELETE
    ON person
    FOR EACH ROW
EXECUTE FUNCTION fnc_trg_person_audit();

INSERT INTO person(id, name, age, gender, address)
VALUES (10,'Damir', 22, 'male', 'Irkutsk');

UPDATE person SET name = 'Bulat' WHERE id = 10;
UPDATE person SET name = 'Damir' WHERE id = 10;
DELETE FROM person WHERE id = 10;